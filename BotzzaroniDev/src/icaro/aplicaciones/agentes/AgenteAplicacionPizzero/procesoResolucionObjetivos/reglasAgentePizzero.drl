import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*
import icaro.aplicaciones.agentes.AgenteAplicacionPizzero.objetivos.*;

import icaro.aplicaciones.agentes.AgenteAplicacionPizzero.tareas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionPizzero.tools.*;
import icaro.aplicaciones.informacion.gestionPizzeria.*;

import icaro.aplicaciones.informacion.gestionPizzeria.FocoUsuario;

import icaro.infraestructura.entidadesBasicas.interfaces.InterfazUsoAgente;
import icaro.infraestructura.entidadesBasicas.NombresPredefinidos;
import icaro.infraestructura.entidadesBasicas.comunicacion.MensajeSimple;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;



rule "Regla de solicitar nombre de pizza"
 when
    notif:Notificacion(tipoNotificacion == tipoNotif.pidePizza, group: identNotificador)
 	//fc:FocoUsuario()
 then 
  	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTARA LA REGLA: " + drools.getRule().getName());
  	Objetivo ob = new ObtenerNombrePizza();
  	ob.setobjectReferenceId(group);  	
  	FocoUsuario fgr = new FocoUsuario(group);
  	fgr.setFoco(ob);  	

  	//obj.setSolved();
  	
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenericoPizzero.class);  	
    tarea.ejecutar(group,ConversacionPizzero.msg("solicitarPizza"));
    System.out.println("el agent id...: " + agentId);
   	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
   	
   	//update(obj);
   	insert(fgr);
   	insert(ob);
   	retract(notif);
end

rule "Regla de obtencion de la pizza" 
 when
 	ob:ObtenerNombrePizza(group:objectReferenceId, state == Objetivo.PENDING)
 	//fc:FocoUsuario(username == group, foco == ob )
    notif:Notificacion(identNotificador == group, tipoNotificacion == tipoNotif.pizzas, msgg:mensajeNotificacion )
    //gr:Usuario(username == group)
 then
 	ob.setSolved();
 	
 	// TODO TODO TODO FIXME hacer cosas para guardar la pizza
 	
 	//gr.actividad();
 	
 	//fc.setFoco(null);
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenericoPizzero.class);
    tarea.ejecutar(group,ConversacionPizzero.msg("tengoTuPizza"));
   	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
   	
   	// creamos objetivo de obtener la masa, ya que tenemos el nombre de la pizza!
   	Objetivo ob2 = new ObtenerMasa();
  	ob2.setobjectReferenceId(group);
  	//fc.setFoco(ob2);
   	FocoUsuario fgr = new FocoUsuario(group);
  	fgr.setFoco(ob2);  	
   	
   	update(ob);
   	update(fgr);
   	retract(notif);
   	insert(ob2);
end




rule "Salsa"
 when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion == tipoNotif.salsas)
   	gr:Usuario(username == identInterlc)
 then
  	 TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenericoPizzero.class);
     tarea.ejecutar(identInterlc,ConversacionPizzero.msg("tengoTuSalsa"));
     recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
     gr.actividad();
     retract(notif);
end

rule "Masa pizza"
 when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion == tipoNotif.masapizza)
   	gr:Usuario(username == identInterlc)
 then
  	 TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenericoPizzero.class);
     tarea.ejecutar(identInterlc,ConversacionPizzero.msg("tengoTuMasa"));
     recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
     gr.actividad();
     retract(notif);
end