#import "mainstates.h"

extern void led1_on();
extern void led2_on();
extern void leds_off();
extern void D8Led_symbol(int value);
extern void init_ISR();

extern State;

State state;


State get_current_state() {
	return state;
}

void set_current_state(State new_state) {
	state = new_state;
}

void initialize() {

	init_ISR();

	// Inicialización del teclado matricial
	D8Led_symbol(0);
	/* Establecer valor inicial de los LEDs */
	leds_off();

	DelayMs(100);

	set_current_state(S0); // Hemos terminado de inicializar todo y pasamos a esperar
	// que el usuario introduzca un numero
}


void reset_everything() {
	set_current_state(RESTART);
	leds_off();
	D8Led_symbol(0);
	set_current_state(ESPERA_NUM_1);
}

void mostrar_error() {
	set_current_state(MOSTRAR_SECUENCIA_ERROR);
	D8Led_init(14);
	Delay(1000);
	reset_everything();
}

void calcular_y_mostrar(int first_num, int second_num, int op) {
	int result = -1;
	if (op == 16) {
		// +
		result = first_num + second_num;
	} else if (op == 17) {
		// -
		result = abs(first_num - second_num);

	} else if (op == 18) {
		// *
		result = first_num * second_num;
	}
	set_current_state(MOSTRAR_RESULT); // Vamos a mostrar el resultado, asi que modificamos
	// el estado

	//leds_off();
	counter = 10;
	if (result >= 0 && result <= 9) {
		n1 = 0;
		n0 = result;
		showfirst = 3 ;
	} else if (result >= 10 && result <= 99) {
		n0 = result/10;
		n1 = result%10;
		showfirst = 1 ;
	}

}
