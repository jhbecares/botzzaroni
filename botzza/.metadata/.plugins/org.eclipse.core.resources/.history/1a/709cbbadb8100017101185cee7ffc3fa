/*--- ficheros de cabecera ---*/
#include "44b.h"
#include "44blib.h"
#include "def.h"

extern void KeyboardInt();
extern void Eint4567_ISR();


void button();
void timer();
void keyboard();

void init_ISR(void) {
	/* Configuracion del controlador de interrupciones */
	// Borra EXTINTPND escribiendo 1s en el propio registro
	rEXTINTPND = 0xF;
	// Borra INTPND escribiendo 1s en I_ISPC
	rI_ISPC = 0xFFFF;

	rINTMOD = 0x0;// Configurar las lineas como de tipo IRQ
	rINTCON = 0x1;// Habilitar int. vectorizadas y la linea IRQ (FIQ no)
	rINTMSK = rINTMSK & ~(BIT_GLOBAL | BIT_EINT1 | BIT_EINT4567); // Enmascarar las lineas

	/* Configuracion del puerto G */
	// Establece la funcion de los pines (EINT7-EINT0)
	// Habilita las resistencias de pull-up
	rPCONG = 0xFFFF; // si los pines no empiezan en 0, cambiar a 0xC3FF
	rPUPG = 0x00;

	// Configura las lineas de int. como de flanco de bajada mediante EXTINT
	rEXTINT = rEXTINT | 0x22222222; // be, ec

	keyboard();
	button();

	// Borra EXTINTPND escribiendo 1s en el propio registro
	rEXTINTPND = 0xF;
	// Borra INTPND escribiendo 1s en I_ISPC
	rI_ISPC = 0xFFFF;
}


void keyboard(void)
{
	/* Establece la rutina de servicio para EINT1 */
	pISR_EINT1 = (unsigned)KeyboardInt;
}

void button(void) {

	// Establecer la rutina de servicio para Eint4567
	pISR_EINT4567 = (unsigned)Eint4567_ISR;
}
